## $M_\pi$ {#Mpi}

```{r ,include=FALSE}
library(Rose)
library(ggplot2)
library(plotly)
library(knitr)
# library(hadron)
#library(kableExtra) # breaks latex
#library(tidyverse)

df <- data.frame(x = 1:5, y = 1:5)
f1 <- function(df) {
  gg <- ggplot(df, aes(x,y)) + geom_point()
  assign("ggp", plotly::ggplotly(gg), envir=parent.frame())
  #ggp
  df    # NOT returning a plot
}
res1 <- f1(df)
ggp   # Let knit handle the plot
myplotly(ggplot())
#widgetframe::frameableWidget(ggplotly(ggp)%>%config(mathjax = "cdn") )
```

```{r, results='asis',echo=FALSE, eval=FALSE}
ens<-c(
      # "cA.30.32_mu.0.003000",
      #  "cA.40.24_mu.0.004000",
      #  "cA.53.24_mu.0.005300",
        "cA.12.48_mu.0.001200_mpcac"
       # "cB.72.64_mu.0.000720",
       # "cB.72.96_mu.0.000720",
       # "cC.06.80_mu.0.000600",
       #"cD.54.96_mu.0.000540"
       # "cE.44.112_mu.0.000440"
       )
source("/home/garofalo/programs/Rose/R/read_block.R")
dir <-"/home/garofalo/analysis/g-2_new_stat/out/"
df<-NULL
for (e in ens){
  mt<-read_df(paste0(dir,e,"_output"))
  all_obs<-Rose::get_all_corr(mt)
  df<-add_corr_to_df("mpcac_TM",all_obs ,mt,df, 
                     rename = paste0("Mpi-",substr( e , start = 1 , stop = 8 )))
  
  # fit<-get_full_res("M_{PS}^{op}",all_obs ,mt)
  # cat(fit[1,1],fit[1,2],"<br />")
}
gg<-plot_df_corr_ggplot(df)
fig<-myplotly(gg, to_print = TRUE)
```

```{r, results='asis',echo=FALSE}
ens<-c(
      # "cA.30.32_mu.0.003000",
      #  "cA.40.24_mu.0.004000",
      #  "cA.53.24_mu.0.005300",
       "cA.12.48_mu.0.001200",
       "cB.72.64_mu.0.000720",
       "cB.72.96_mu.0.000720",
       "cC.06.80_mu.0.000600",
       "cD.54.96_mu.0.000540",
       "cE.44.112_mu.0.000440",
       "cC.20.48_mu.0.002000"
       )
source("/home/garofalo/programs/Rose/R/read_block.R")
dir <-"/home/garofalo/analysis/g-2_new_stat/out/"
df<-NULL
for (e in ens){
  mt<-read_df(paste0(dir,e,"_output"))
  all_obs<-Rose::get_all_corr(mt)
  df<-add_corr_to_df("M_{PS}^{op}",all_obs ,mt,df, 
                     rename = paste0("Mpi-",substr( e , start = 1 , stop = 8 )))
  
  # df<-add_corr_to_df("f_{pi}",all_obs ,mt,df, 
  #                    rename = paste0("fpi-",substr( e , start = 1 , stop = 8 )))
  
  fit<-get_full_res("M_{PS}^{op}",all_obs ,mt)
  cat(fit[1,1],fit[1,2],"<br />")
}
gg<-plot_df_corr_ggplot(df)
fig<-myplotly(gg, to_print = TRUE)
```


## Mpi fit (only as test)

to determine $a\mu_\ell$ we fit
$$
\frac{M_\pi^2}{f_\pi^2}= 2 \left(\frac{aB}{a^2f_\pi^2}\right) a\mu_\ell
\left[1+5\xi\log \xi +P\xi \right]
$$
where left hand site is a function of the variable $a\mu_\ell$ and  $\left(\frac{aB}{a^2f_\pi^2}\right)$ is a fit parameter for each lattice spacing and $P$ a global parameter for all lattices.
We define $\xi=2\left(\frac{aB}{a^2f_\pi^2}\right) a\mu_\ell$.
After the fit we solve for $a\mu_\ell$ imposing the physical value of the ratio $\frac{M_\pi^2}{f_\pi^2}\bigg|_{phys}$

```{r, echo=FALSE, results='asis', dev='tikz', warning=FALSE}

dir <- "/home/garofalo/analysis/g-2_new_stat/fit_all/"
namefit <- paste0(dir, "aMpi2_over_afpi2_cov")
file <- paste0(namefit, "_fit_P.dat")
fit <- read_fit_P_file(file)
cat("\n\n")
dt <- make_table_fit_result(fit)
print(dt)
gg <- myggplot(repeat_color = 1)
gg <- plot_fit(
  basename = namefit,
  var = "amu",
  id_x = 1,
  data_type = c( "B", "C", "D", "E", "B", "C", "D"),
  width = 1e-4,
  gg = gg, 
  labelfit = "",
  # , single_name_for_fit = "fit"
  # , nolabel_for_fit = TRUE
  noline = TRUE
)
# filed <- paste0(namefit, "_fit_data.txt")
# df <- read.table(filed, header = FALSE, fill = TRUE)
# idy <- ncol(df) - 2
# kable(df[, c(1,2,3,4,idy,idy+1)],col.names =c("mu","aMpi","afpi","L","afpi-inf","err") )
#gg <- gg + geom_vline(xintercept = 0.00678723)
gg <- gg + geom_hline(yintercept = 1.07015457788)
fig <- myplotly(gg, "", "$a\\mu_\\ell$", "$(M_\\pi/f_\\pi)^2$", to_print = TRUE)
df<-read.table(paste0(dir,"aMpi2_over_afpi2_cov_amul_res.txt"))
dft<-df[,c(1,2)]
dft[,2] <- mapply(mean_print, df[,2],df[,3])
kable(dft, col.names = c("Ens.","$a\\mu_\\ell$"))
```



## Mpi fit only physical point (test)


```{r, echo=FALSE, results='asis', dev='tikz', warning=FALSE}

dir <- "/home/garofalo/analysis/g-2_new_stat/fit_all/"
namefit <- paste0(dir, "aMpi2_over_afpi2_only_phys_point_cov")
file <- paste0(namefit, "_fit_P.dat")
fit <- read_fit_P_file(file)
cat("\n\n")
dt <- make_table_fit_result(fit)
print(dt)
gg <- myggplot(repeat_color = 1)
gg <- plot_fit(
  basename = namefit,
  var = "amu",
  id_x = 1,
  data_type = c( "B", "C", "D", "E", "B", "C", "D"),
  width = 1e-4,
  gg = gg, 
  labelfit = "",
  # , single_name_for_fit = "fit"
  # , nolabel_for_fit = TRUE
  noline = TRUE
)
# filed <- paste0(namefit, "_fit_data.txt")
# df <- read.table(filed, header = FALSE, fill = TRUE)
# idy <- ncol(df) - 2
# kable(df[, c(1,2,3,4,idy,idy+1)],col.names =c("mu","aMpi","afpi","L","afpi-inf","err") )
#gg <- gg + geom_vline(xintercept = 0.00678723)
gg <- gg + geom_hline(yintercept = 1.07015457788)
fig <- myplotly(gg, "", "$a\\mu_\\ell$", "$(M_\\pi/f_\\pi)^2$", to_print = TRUE)
df<-read.table(paste0(dir,"aMpi2_over_afpi2_cov_amul_res.txt"))
df1<-read.table(paste0(dir,"aMpi2_over_afpi2_only_phys_point_cov_amul_res.txt"))
dft<-df[,c(1,2,3)]
dft[,2] <- mapply(mean_print, df[,2],df[,3])
dft[,3] <- mapply(mean_print, df1[,2],df1[,3])
kable(dft, col.names = c("Ens.","$a\\mu_\\ell$","$a\\mu_\\ell(phys point only)$" ))
```



### adding A ensemble (only as test)

```{r, echo=FALSE, results='asis', dev='tikz', warning=FALSE}


dir <- "/home/garofalo/analysis/g-2_new_stat/fit_all/"
namefit <- paste0(dir, "aMpi2_over_afpi2_A_cov")
file <- paste0(namefit, "_fit_P.dat")
fit <- read_fit_P_file(file)
cat("\n\n")
dt <- make_table_fit_result(fit)
print(dt)
gg <- myggplot(repeat_color = 1)
gg <- plot_fit(
  basename = namefit,
  var = "amu",
  id_x = 1,
  data_type = c("A", "B", "C", "D", "E", "B", "C", "D"),
  width = 1e-4,
  gg = gg, 
  labelfit = "",
  # , single_name_for_fit = "fit"
  # , nolabel_for_fit = TRUE
  noline = TRUE
)
# filed <- paste0(namefit, "_fit_data.txt")
# df <- read.table(filed, header = FALSE, fill = TRUE)
# idy <- ncol(df) - 2
# kable(df[, c(1,2,3,4,idy,idy+1)],col.names =c("mu","aMpi","afpi","L","afpi-inf","err") )
gg <- gg + geom_hline(yintercept = 1.07015457788)
fig <- myplotly(gg, "", "$a\\mu_\\ell$", "$(M_\\pi/f_\\pi)^2$", to_print = TRUE)
df<-read.table(paste0(dir,"aMpi2_over_afpi2_A_cov_amul_res.txt"))
dft<-df[,c(1,2)]
dft[,2] <- mapply(mean_print, df[,2],df[,3])
kable(dft, col.names = c("Ens.","$a\\mu_\\ell$"))

```

## a2 term C20.48 no A12.48

 adding an extra parameter
$$
\frac{M_\pi^2}{f_\pi^2}= 2 \left(\frac{aB}{a^2f_\pi^2}\right) a\mu_\ell
\left[1+5\xi\log \xi +P\xi +P_1 a^2 \right]
$$


 
```{r, echo=FALSE, results='asis', dev='tikz', warning=FALSE}


dir <- "/home/garofalo/analysis/g-2_new_stat/fit_all/"
namefit <- paste0(dir, "aMpi2_over_afpi2_a2_A_no_max_twist_cov")
file <- paste0(namefit, "_fit_P.dat")
fit <- read_fit_P_file(file)
cat("\n\n")
dt <- make_table_fit_result(fit)
print(dt)
gg <- myggplot(repeat_color = 1)
gg <- plot_fit(
  basename = namefit,
  var = "amu",
  id_x = 1,
  data_type = c("A-no-max-tw", "B-no-max-tw", "C-no-max-tw", "D-no-max-tw", "E-no-max-tw", "B-no-max-tw", "C-no-max-tw", "D-no-max-tw"),
  width = 1e-4,
  gg = gg, 
  labelfit = "",
  # , single_name_for_fit = "fit"
  # , nolabel_for_fit = TRUE
  noline = TRUE
)

namefit <- paste0(dir, "aMpi2_over_afpi2_a2_A_cov")

gg <- plot_fit(
  basename = namefit,
  var = "amu",
  id_x = 1,
  data_type = c("A", "B", "C", "D", "E", "B", "C", "D"),
  width = 1e-4,
  gg = gg, 
  labelfit = "",
  # , single_name_for_fit = "fit"
  # , nolabel_for_fit = TRUE
  noline = TRUE
)

# filed <- paste0(namefit, "_fit_data.txt")
# df <- read.table(filed, header = FALSE, fill = TRUE)
# idy <- ncol(df) - 2
# kable(df[, c(1,2,3,4,idy,idy+1)],col.names =c("mu","aMpi","afpi","L","afpi-inf","err") )
gg <- gg + geom_hline(yintercept = 1.07015457788)
fig <- myplotly(gg, "", "$a\\mu_\\ell$", "$(M_\\pi/f_\\pi)^2$", to_print = TRUE)
df<-read.table(paste0(dir,"aMpi2_over_afpi2_a2_A_cov_amul_res.txt"))
df1<-read.table(paste0(dir,"aMpi2_over_afpi2_a2_A_no_max_twist_cov_amul_res.txt"))
dft<-df[,c(1,2,3)]
dft[,2] <- mapply(mean_print, df[,2],df[,3])
dft[,3] <- mapply(mean_print, df1[,2],df1[,3])
kable(dft, col.names = c("Ens.","$a\\mu_\\ell$","$a\\mu_\\ell$-no-max-tw"))

```


## A12.48 no C20.48 



```{r, echo=FALSE, results='asis', dev='tikz', warning=FALSE}


dir <- "/home/garofalo/analysis/g-2_new_stat/fit_all/"


namefit <- paste0(dir, "aMpi2_over_afpi2_A12_noC20_cov")
file <- paste0(namefit, "_fit_P.dat")
fit <- read_fit_P_file(file)
dt <- make_table_fit_result(fit)
print(dt)


gg <- plot_fit(
  basename = namefit,
  var = "amu",
  id_x = 1,
  data_type = c("A", "B", "C", "D", "E", "B", "C", "D"),
  width = 1e-4,
  gg = NULL, 
  labelfit = "",
  # , single_name_for_fit = "fit"
  # , nolabel_for_fit = TRUE
  noline = TRUE
)

# filed <- paste0(namefit, "_fit_data.txt")
# df <- read.table(filed, header = FALSE, fill = TRUE)
# idy <- ncol(df) - 2
# kable(df[, c(1,2,3,4,idy,idy+1)],col.names =c("mu","aMpi","afpi","L","afpi-inf","err") )
gg <- gg + geom_hline(yintercept = 1.07015457788)
fig <- myplotly(gg, "", "$a\\mu_\\ell$", "$(M_\\pi/f_\\pi)^2$", to_print = TRUE)
# df<-read.table(paste0(dir,"aMpi2_over_afpi2_a2_A_cov_amul_res.txt"))
# df1<-read.table(paste0(dir,"aMpi2_over_afpi2_a2_A_no_max_twist_cov_amul_res.txt"))
# dft<-df[,c(1,2,3)]
# dft[,2] <- mapply(mean_print, df[,2],df[,3])
# dft[,3] <- mapply(mean_print, df1[,2],df1[,3])
# kable(dft, col.names = c("Ens.","$a\\mu_\\ell$","$a\\mu_\\ell$-no-max-tw"))

```




## A12.48 no C20.48 + strange misstuning (used for $a\mu_\ell$ determination)



```{r, echo=FALSE, results='asis', dev='tikz', warning=FALSE}


dir <- "/home/garofalo/analysis/g-2_new_stat/fit_all/"


namefit <- paste0(dir, "aMpi2_over_afpi2_A12_noC20_cor_cov")
file <- paste0(namefit, "_fit_P.dat")
fit <- read_fit_P_file(file)
dt <- make_table_fit_result(fit)
print(dt)


gg <- plot_fit(
  basename = namefit,
  var = "amu",
  id_x = 1,
  data_type = c("A", "B", "C", "D", "E", "B", "C", "D"),
  width = 1e-4,
  gg = NULL, 
  labelfit = "",
  # , single_name_for_fit = "fit"
  # , nolabel_for_fit = TRUE
  noline = TRUE
)

# filed <- paste0(namefit, "_fit_data.txt")
# df <- read.table(filed, header = FALSE, fill = TRUE)
# idy <- ncol(df) - 2
# kable(df[, c(1,2,3,4,idy,idy+1)],col.names =c("mu","aMpi","afpi","L","afpi-inf","err") )
gg <- gg + geom_hline(yintercept = 1.07015457788)
fig <- myplotly(gg, "", "$a\\mu_\\ell$", "$(M_\\pi/f_\\pi)^2$", to_print = TRUE)
# df<-read.table(paste0(dir,"aMpi2_over_afpi2_a2_A_cov_amul_res.txt"))
# df1<-read.table(paste0(dir,"aMpi2_over_afpi2_a2_A_no_max_twist_cov_amul_res.txt"))
# dft<-df[,c(1,2,3)]
# dft[,2] <- mapply(mean_print, df[,2],df[,3])
# dft[,3] <- mapply(mean_print, df1[,2],df1[,3])
# kable(dft, col.names = c("Ens.","$a\\mu_\\ell$","$a\\mu_\\ell$-no-max-tw"))

```
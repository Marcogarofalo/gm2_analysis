# $a_{\mu}(c)$ {#amu_c_continuum}


```{r ,include=FALSE}
library(Rose)
library(ggplot2)
library(plotly)
library(knitr)
# library(hadron)
# library(kableExtra) # breaks latex
# library(tidyverse)

df <- data.frame(x = 1:5, y = 1:5)
f1 <- function(df) {
  gg <- ggplot(df, aes(x, y)) +
    geom_point()
  assign("ggp", plotly::ggplotly(gg), envir = parent.frame())
  # ggp
  df # NOT returning a plot
}
res1 <- f1(df)
ggp # Let knit handle the plot
myplotly(ggplot())
# widgetframe::frameableWidget(ggplotly(ggp)%>%config(mathjax = "cdn") )
```




```{r, echo=FALSE, results='asis'}
library("gridExtra")
library("ggpubr")
library(stringr)

eq_op <- function(x) {
  if (x == 0) {
    return("OS")
  } # equal
  else {
    return("TM")
  } # opposite
}
eq_op1 <- function(x) {
  if (x == 0) {
    return("OS-a(tau)")
  } # equal
  else {
    return("TM-a(tau)")
  } # opposite
}
AIC <- function(v, err, chi2dof, dof, npar, multiplicity = 1) {
  l <- list()
  Nmeas <- dof + npar
  AIC <- exp(-0.5 * (chi2dof * dof + 2 * npar - Nmeas)) / multiplicity
  N <- sum(AIC)
  AIC <- AIC / N
  l$AIC <- AIC
  l$m <- sum(v * AIC)
  stat <- sum(AIC * err^2)
  syst <- sum(AIC * (v - l$m)^2)
  l$dm <- sqrt(stat + syst)
  l$stat <- sqrt(stat)
  l$syst <- sqrt(syst)
  return(l)
}
AIC2 <- function(v, err, chi2dof, dof, npar, multiplicity = 1) {
  l <- list()
  Nmeas <- dof + npar
  AIC <- exp(-0.5 * (chi2dof * dof + 2 * npar - 2 * Nmeas)) / multiplicity
  N <- sum(AIC)
  AIC <- AIC / N
  l$AIC <- AIC
  l$m <- sum(v * AIC)
  stat <- sum(AIC * err^2)
  syst <- sum(AIC * (v - l$m)^2)
  l$dm <- sqrt(stat + syst)
  l$stat <- sqrt(stat)
  l$syst <- sqrt(syst)
  return(l)
}
plot_the_Ambaradam <- function(name) {
  list_lat <- c(
    "_3b", "_3b_BOS", "_3b_BTM", "_3b_BOS_BTM",
    "_3b_noC", "_3b_noC_BOS", "_3b_noC_BTM",
    "_3b_onlyOS", "_3b_onlyTM", "_4b_onlyOS", "_4b_onlyTM",
    "_3b_noC_onlyOS", "_3b_noC_onlyTM"
  )
  list_a <- c(
    "", "_a4OS", "_a4TM", "_a4OS_a4TM",
    "_alogOS", "_alogTM", "_alogOS_alogTM",
    "_alog2OS", "_alog2TM", "_alog2OS_alog2TM",
    "_alog3OS", "_alog3TM", "_alog3OS_alog3TM",
    "_a4",
    "_alog", "_alog2", "_alog3"
  )
  source("/home/garofalo/programs/Rose/R/read_block.R")
  dir <- "/home/garofalo/analysis/g-2_new_stat/fit_all_charm/"
  count <- 0
  for (lat in list_lat) {
    for (a2 in list_a) {
      namefit <- paste0("amu_", name, lat, a2)
      namefile <- paste0(dir, namefit)

      file <- paste0(namefile, "_fit_P.dat")
      if (file.exists(file)) {
        count <- count + 1
      }
    }
  }
  df <- data.frame(
    "fit" = rep("", count),
    "res" = rep(0, count),
    "err" = rep(0, count),
    "chi2dof" = rep(0, count),
    "dof" = rep(0, count),
    "Npar" = rep(0, count),
    "Ndat" = rep(0, count),
    "mult" = rep(0, count),
    "k" = rep(0, count)
  )
  gg <- myggplot(repeat_color = 1)
  count <- 1
  for (lat in list_lat) {
    # for (lat in c("_3b_BOS_BTM" )){
    for (a2 in list_a) {
      # for (a2 in c( "_a4OS_a4TM")) {
      namefit <- paste0("amu_", name, lat, a2)
      namefile <- paste0(dir, namefit)

      file <- paste0(namefile, "_fit_P.dat")
      if (file.exists(file)) {
        fit <- read_fit_P_file(file)
        mydata <- c("OS", "TM")
        if (str_detect(namefit, "onlyOS")) mydata <- c("OS")
        if (str_detect(namefit, "onlyTM")) mydata <- c("TM")
        # if (fit$dof == 1) next
        df[count, 1] <- namefit
        df[count, c(2, 3)] <- fit$P[1, c(2, 3)]
        df[count, 4] <- fit$chi2dof
        df[count, 5] <- fit$dof
        df[count, 6] <- fit$npar
        df[count, 7] <- fit$ndata
        if (str_detect(namefit, "log")) {
          df[count, 8] <- 3
        } else {
          df[count, 8] <- 1
        }
        M <- data.matrix(fit$C)
        for (i in c(1:dim(M)[1])) {
          for (j in c(1:dim(M)[1])) {
            M[i, j] <- as.numeric(fit$C[i, j])
          }
        }
        e <- eigen(M)

        lmin <- min(abs(e$values))
        lmax <- max(abs(e$values))
        df$k[count] <- lmax / lmin
        
        namelegend <- "fit"
        if (str_detect(namefit, "log")) {
          namelegend <- paste0(namelegend, "-log")
        }
        if (str_detect(namefit, "_3b_BOS_BTM")) {
          namelegend <- paste0(namelegend, "-4beta")
        }

        # if (
        #   (lat == "_3b_BOS_BTM" & a2 == "_a4OS_a4TM") |
        #     (lat == "_3b" & a2 == "") |
        #     (lat == "_3b" & a2 == "_a4OS_a4TM")|
        #     (lat == "_3b_BOS_BTM" & a2 == "_alogOS_alogTM") |
        #     (lat == "_3b_onlyTM" & a2=="")
        # ) {
        #   gg <- plot_fit(
        #     basename = namefile,
        #     var = "afm",
        #     id_x = 1,
        #     data_type = mydata,
        #     width = 1e-4,
        #     gg = gg,
        #     single_name_for_fit = namelegend,
        #     noribbon = TRUE
        #   )
        # }
        count <- count + 1
      }
    }
  }
  a <- which(df$fit == "")
  if (length(a) > 0) {
    print("eliminating:")
    print(df$fit[a])
    df <- df[-a, ]
  }
  ave_AIC <- AIC(v = df$res, err = df$err, chi2dof = df$chi2dof, dof = df$dof, npar = df$Npar, multiplicity = df$mult)
  cat(
    "AIC (chi2 + 2Npar - Ndat)/2 = ", mean_print(ave_AIC$m, ave_AIC$dm),
    "(", ave_AIC$stat, ")", "[", ave_AIC$syst, "]", "\n\n"
  )
  df$AIC <- ave_AIC$AIC
  l <- order(df$AIC, decreasing = TRUE)
  sumAIC <- 0
  for (i in l) {
    namefile <- paste0(dir, df$fit[i])
    mydata <- c(" OS", " TM")
    if (str_detect(df$fit[i], "onlyOS")) mydata <- c(" OS")
    if (str_detect(df$fit[i], "onlyTM")) mydata <- c(" TM")
    namelegend <- "fit"
    gg <- plot_fit(
      basename = namefile,
      var = "afm",
      id_x = 1,
      data_type = mydata,
      width = 1e-4,
      gg = gg,
      single_name_for_fit = paste0("AIC=", df$AIC[i]),
      noribbon = TRUE
    )
    sumAIC <- sumAIC + df$AIC[i]
    if (sumAIC > 0.3) {
      break
    }
  }

  ###########################

  a <- which(df$dof == 1)
  if (length(a) > 0) {
    df1 <- df[-a, ]
  } else {
    df1 <- df
  }
  
  ave_AIC1 <- AIC(v = df1$res, err = df1$err, chi2dof = df1$chi2dof, dof = df1$dof, npar = df1$Npar, multiplicity = df1$mult)
  cat("AIC (chi2 + 2Npar - Ndat)/2 (no dof =1) = ", mean_print(ave_AIC1$m, ave_AIC1$dm), "\n\n")

  tresh<-1e+4
  a<-which(df$k <tresh)
  df1<- df[a, ]
  ave_AIC_mc <- AIC2(v = df1$res, err = df1$err, chi2dof = df1$chi2dof, dof = df1$dof, npar = df1$Npar, multiplicity = df1$mult)
  cat(
    "AIC (k<",tresh,") = ", mean_print(ave_AIC_mc$m, ave_AIC_mc$dm),
    "(", ave_AIC_mc$stat, ")", "[", ave_AIC_mc$syst, "]", "\n\n"
  )
  
  ave_AIC2 <- AIC2(v = df$res, err = df$err, chi2dof = df$chi2dof, dof = df$dof, npar = df$Npar, multiplicity = df$mult)
  cat("AIC (chi2 + 2Npar -2 Ndat)/2 = ", mean_print(ave_AIC2$m, ave_AIC2$dm), "\n\n")

  a <- which(str_detect(df$fit, "only"))
  df1 <- df[-a, ]
  ave_AIC11 <- AIC(v = df1$res, err = df1$err, chi2dof = df1$chi2dof, dof = df1$dof, npar = df1$Npar, multiplicity = df1$mult)
  cat("AIC (chi2 + 2Npar - Ndat)/2 (only TM/OS combined) = ", mean_print(ave_AIC11$m, ave_AIC11$dm), "\n\n")
  ave_AIC11 <- AIC2(v = df1$res, err = df1$err, chi2dof = df1$chi2dof, dof = df1$dof, npar = df1$Npar, multiplicity = df1$mult)
  cat("AIC (chi2 + 2Npar -2 Ndat)/2 (only TM/OS combined) = ", mean_print(ave_AIC11$m, ave_AIC11$dm), "\n\n")

  a <- which(str_detect(df$fit, "alog"))
  df1 <- df[-a, ]
  ave_AIC11 <- AIC(v = df1$res, err = df1$err, chi2dof = df1$chi2dof, dof = df1$dof, npar = df1$Npar, multiplicity = df1$mult)
  cat("AIC (chi2 + 2Npar - Ndat)/2 (no log ) = ", mean_print(ave_AIC11$m, ave_AIC11$dm), "\n\n")
  ave_AIC11 <- AIC2(v = df1$res, err = df1$err, chi2dof = df1$chi2dof, dof = df1$dof, npar = df1$Npar, multiplicity = df1$mult)
  cat("AIC (chi2 + 2Npar -2 Ndat)/2 (no log ) = ", mean_print(ave_AIC11$m, ave_AIC11$dm), "\n\n")

  a <- which(str_detect(df$fit, "_3b_BOS_BTM"))
  df1 <- df[a, ]
  ave_AIC11 <- AIC(v = df1$res, err = df1$err, chi2dof = df1$chi2dof, dof = df1$dof, npar = df1$Npar, multiplicity = df1$mult)
  cat("AIC (chi2 + 2Npar - Ndat)/2 (always 4 latt) = ", mean_print(ave_AIC11$m, ave_AIC11$dm), "\n\n")

  a <- which(str_detect(df$fit, "_3b_BOS_BTM"))
  a <- c(a, which(str_detect(df$fit, "_3b$")))
  # a <- c(a, which(str_detect(df$fit, "_3b_onlyOS$")))
  # a <- c(a, which(str_detect(df$fit, "_3b_onlyTM$")))
  df1 <- df[a, ]
  ave_AIC11 <- AIC(v = df1$res, err = df1$err, chi2dof = df1$chi2dof, dof = df1$dof, npar = df1$Npar, multiplicity = df1$mult)
  cat("AIC (chi2 + 2Npar - Ndat)/2 (4 latt + 3 linear ) = ", mean_print(ave_AIC11$m, ave_AIC11$dm), "\n\n")

  a <- c(which(str_detect(df$fit, "alog2")), which(str_detect(df$fit, "alog3")))
  df1 <- df[-a, ]
  ave_AIC11 <- AIC(v = df1$res, err = df1$err, chi2dof = df1$chi2dof, dof = df1$dof, npar = df1$Npar, multiplicity = 1)
  cat("AIC (chi2 + 2Npar - Ndat)/2 (no a/log^2(3) a) = ", mean_print(ave_AIC11$m, ave_AIC11$dm), "\n\n")

  gg <- gg + geom_pointrange(aes(
    x = 0, y = ave_AIC$m, ymin = ave_AIC$m - ave_AIC$dm,
    ymax = ave_AIC$m + ave_AIC$dm, color = "AIC", shape = "AIC", fill = "AIC"
  ))
  fig <- myplotly(gg, "", "$a^2$", "$a_{\\mu}(c)$", to_print = TRUE, output = "HTML", legend_position = c(0, 0))
  # fig <- fig + ylim(5.1e-9, 5.43e-9) +xlim(0,0.008)+ theme(axis.title.y=element_blank(),
  #         axis.text.y=element_blank(),
  #         axis.ticks.y=element_blank())+theme(plot.margin = margin(0,0,0,0, "cm"))
  gg <- ggplot() +
    geom_histogram(aes(y = df$res, weight = ave_AIC$AIC)) +
    theme_bw()

  gg <- gg +
    # ylim(5.1e-9, 5.43e-9) +
    ylab("$a_{\\mu}(s)$") + theme(plot.margin = margin(0, 0, 0, 0, "cm")) + theme(
      axis.title.x = element_blank(),
      axis.text.x = element_text(angle = 45, vjust = 0.5, hjust = 0.5)
    )
  print(gg)
  # ggarrange(gg, fig,
  #   align = "h",
  #   # heights = c(2, 0.7),
  #   widths = c(1, 3.5),
  #   ncol = 2, nrow = 1
  # )
  df$AIC <- ave_AIC$AIC
  return(df)
}


file <- sprintf("/home/garofalo/analysis/g-2_new_stat/fit_all_charm/amu_SDcor_3b_BOS_BTM_a4OS_a4TM_fit_data.txt")
df <- read.table(file, header = FALSE, fill = TRUE)
iy <- length(df[1, ]) - 2
dft <- df[, c(1, iy)]
# names(dft) <- c("$a^2(\\text{fm})$", "$a_{\\mu}(c)$", "r")
dft[, 2] <- mapply(mean_print, df[, iy], df[, iy + 1])

file <- sprintf("/home/garofalo/analysis/g-2_new_stat/fit_all_charm/amu_Wcor_3b_BOS_BTM_a4OS_a4TM_fit_data.txt")
df <- read.table(file, header = FALSE, fill = TRUE)
iy <- length(df[1, ]) - 2
dft <- cbind(dft, mapply(mean_print, df[, iy], df[, iy + 1]))

file <- sprintf("/home/garofalo/analysis/g-2_new_stat/fit_all_charm/amu_LDcor_3b_BOS_BTM_a4OS_a4TM_fit_data.txt")
df <- read.table(file, header = FALSE, fill = TRUE)
iy <- length(df[1, ]) - 2
dft <- cbind(dft, mapply(mean_print, df[, iy], df[, iy + 1]))

file <- sprintf("/home/garofalo/analysis/g-2_new_stat/fit_all_charm/amu_SDpWpLDcor_3b_BOS_BTM_a4OS_a4TM_fit_data.txt")
df <- read.table(file, header = FALSE, fill = TRUE)
iy <- length(df[1, ]) - 2
dft <- cbind(dft, mapply(mean_print, df[, iy], df[, iy + 1]))
dft <- cbind(dft, c(
  "B-OS", "C-OS", "D-OS", "E-OS",
  "B-TM", "C-TM", "D-MT", "E-TM"
))

kable(dft, col.names = c(
  "$a^2(\\text{fm})$", "$a_{\\mu}^{SD}(c)$",
  "$a_{\\mu}^{W}(c)$", "$a_{\\mu}^{LD}(c)$",
  "$a_{\\mu}^{SD+W+LD}(c)$", "En"
))
```

### SD

window paper value: 11.61(27)e-10

```{r, echo=FALSE, results='asis',  warning=FALSE}
df <- plot_the_Ambaradam("SD")
```

### W

window paper value: 2.90(12)e-10

```{r, echo=FALSE, results='asis',  warning=FALSE}
df <- plot_the_Ambaradam("W")
```

### LD

```{r, echo=FALSE, results='asis',  warning=FALSE}
df <- plot_the_Ambaradam("LD")
```

### SUM

```{r, echo=FALSE, results='asis',  warning=FALSE}
df <- plot_the_Ambaradam("SDpWpLD")
```






```{r, echo=FALSE, results='asis',  warning=FALSE}
source("/home/garofalo/programs/Rose/R/plot_routines.R")

gg <- plot_fit(
  basename = "/home/garofalo/analysis/g-2_new_stat/fit_all_charm/amu_full_3b_BOS_BTM_a4OS_a4TM",
  # basename = "/home/garofalo/analysis/g-2_new_stat/fit_all_charm/amu_SDpWpLD_3b_BOS_BTM",
  # basename = "/home/garofalo/analysis/g-2_new_stat/fit_all_charm/amu_SDpWpLD_3b_alogOS_alogTM",
  var = "afm",
  id_x = 1,
  data_type = c("OS-Ds", "TM-Ds"),
  width = 1e-4,
  gg = NULL,
  single_name_for_fit = "fit-Ds",
  noribbon = TRUE
)

gg <- plot_fit(
  basename = "/home/garofalo/analysis/g-2_new_stat/fit_all/amu_full_a2_a4_MJPsi_cov",
  # basename = "/home/garofalo/analysis/g-2_new_stat/fit_all_charm/amu_SDpWpLD_3b_BOS_BTM",
  # basename = "/home/garofalo/analysis/g-2_new_stat/fit_all_charm/amu_SDpWpLD_3b_alogOS_alogTM",
  var = "afm",
  id_x = 1,
  data_type = c("OS-Jpsi", "TM-Jpsi"),
  width = 1e-4,
  gg = gg,
  single_name_for_fit = "fit-jpsi",
  noribbon = TRUE
)
fig <- myplotly(gg, "", "$a^2$", "$a_{\\mu}(c)$", to_print = TRUE, output = "HTML", legend_position = c(0, 0))
```


## Adding misstuning corrections


### SD

window paper value: 11.61(27)e-10

```{r, echo=FALSE, results='asis',  warning=FALSE}
df <- plot_the_Ambaradam("SDcor")
```


```{r, echo=FALSE, results='asis',  warning=FALSE}
name <- "/home/garofalo/analysis/g-2_new_stat/fit_all_charm//amu_SDcor_3b_BOS_BTM"
file <- paste0(name, "_fit_P.dat")
df <- Rose::read_fit_P_file(file)
print(make_table_fit_result(df))
gg <- plot_fit(
  basename = name,
  var = "afm",
  id_x = 1,
  data_type = c("K", "K"),
  width = 1e-4,
  gg = NULL,
  single_name_for_fit = "fit",
  noline = TRUE
)
# gg <- plot_fit(
#   basename = "/home/garofalo/analysis/g-2_new_stat/fit_all_charm//amu_SDetas_3b_BOS_BTM_a4OS_a4TM",
#   var = "afm",
#   id_x = 1,
#   # data_type = c("OS-eta", "TM-eta"),
#   data_type = c("etas", "etas"),
#   width = 1e-4,
#   gg = gg,
#   single_name_for_fit = "fit-eta",
#   noline = TRUE
# )

fig <- myplotly(gg, "", "$a^2$", "$a_{\\mu}(s)$", to_print = TRUE, output = "HTML", legend_position = c(0, 0))
```

### W

window paper value: 2.90(12)e-10

```{r, echo=FALSE, results='asis',  warning=FALSE}
df <- plot_the_Ambaradam("Wcor")
```

```{r, echo=FALSE, results='asis',  warning=FALSE}
name <- "/home/garofalo/analysis/g-2_new_stat/fit_all_charm//amu_Wcor_3b_BOS_BTM_a4OS_a4TM"
file <- paste0(name, "_fit_P.dat")
df <- Rose::read_fit_P_file(file)
print(make_table_fit_result(df))
gg <- plot_fit(
  basename = name,
  var = "afm",
  id_x = 1,
  data_type = c("K", "K"),
  width = 1e-4,
  gg = NULL,
  single_name_for_fit = "fit",
  noline = TRUE
)
# gg <- plot_fit(
#   basename = "/home/garofalo/analysis/g-2_new_stat/fit_all_charm//amu_SDetas_3b_BOS_BTM_a4OS_a4TM",
#   var = "afm",
#   id_x = 1,
#   # data_type = c("OS-eta", "TM-eta"),
#   data_type = c("etas", "etas"),
#   width = 1e-4,
#   gg = gg,
#   single_name_for_fit = "fit-eta",
#   noline = TRUE
# )

fig <- myplotly(gg, "", "$a^2$", "$a_{\\mu}(s)$", to_print = TRUE, output = "HTML", legend_position = c(0, 0))
```

### LD
```{r, echo=FALSE, results='asis',  warning=FALSE}
df <- plot_the_Ambaradam("LDcor")
```

### SUM

```{r, echo=FALSE, results='asis',  warning=FALSE}
df <- plot_the_Ambaradam("SDpWpLDcor")
```

# $a_{\mu}(s)$ {#amu_s_continuum}

no bounding has been applied

```{r ,include=FALSE}
library(Rose)
library(ggplot2)
library(plotly)
library(knitr)
# library(hadron)
# library(kableExtra) # breaks latex
# library(tidyverse)

df <- data.frame(x = 1:5, y = 1:5)
f1 <- function(df) {
  gg <- ggplot(df, aes(x, y)) +
    geom_point()
  assign("ggp", plotly::ggplotly(gg), envir = parent.frame())
  # ggp
  df # NOT returning a plot
}
res1 <- f1(df)
ggp
myplotly(ggplot())
```

Ensemble fitted:

- Only one regularization with 4 beta or 3 beta exlcuding B or C 

- Both regularization with a common continuum limit, 
  4 beta or 3 beta exlcuding B or C for each regularization

list of fits:

- linear in $a^2$

- quadratic in $a^2$, on both or one regularization only

- $a^2/\log(a)$ , on both or one regularization only

Tot 59 fits


```{r, echo=FALSE, results='asis'}
library("gridExtra")
library("ggpubr")
library(stringr)

eq_op <- function(x) {
  if (x == 0) {
    return("OS")
  } # equal
  else {
    return("TM")
  } # opposite
}
eq_op1 <- function(x) {
  if (x == 0) {
    return("OS-a(tau)")
  } # equal
  else {
    return("TM-a(tau)")
  } # opposite
}
AIC <- function(v, err, chi2dof, dof, npar, multiplicity = 1) {
  l <- list()
  Nmeas <- dof + npar
  AIC <- exp(-0.5 * (chi2dof * dof + 2 * npar - Nmeas)) / multiplicity
  N <- sum(AIC)
  AIC <- AIC / N
  l$AIC <- AIC
  l$m <- sum(v * AIC)
  stat <- sum(AIC * err^2)
  syst <- sum(AIC * (v - l$m)^2)
  l$dm <- sqrt(stat + syst)
  l$stat <- sqrt(stat)
  l$syst <- sqrt(syst)
  return(l)
}
AIC2 <- function(v, err, chi2dof, dof, npar, multiplicity = 1) {
  l <- list()
  Nmeas <- dof + npar
  AIC <- exp(-0.5 * (chi2dof * dof + 2 * npar - 2 * Nmeas)) / multiplicity
  N <- sum(AIC)
  AIC <- AIC / N
  l$AIC <- AIC
  l$m <- sum(v * AIC)
  stat <- sum(AIC * err^2)
  syst <- sum(AIC * (v - l$m)^2)
  l$dm <- sqrt(stat + syst)
  l$stat <- sqrt(stat)
  l$syst <- sqrt(syst)
  return(l)
}
plot_the_Ambaradam <- function(name) {
  list_lat <- c(
    "_3b", "_3b_BOS", "_3b_BTM", "_3b_BOS_BTM",
    "_3b_noC", "_3b_noC_BOS", "_3b_noC_BTM",
    "_3b_onlyOS", "_3b_onlyTM", "_4b_onlyOS", "_4b_onlyTM",
    "_3b_noC_onlyOS", "_3b_noC_onlyTM"
  )
  list_a <- c(
    "", "_a4OS", "_a4TM", "_a4OS_a4TM",
    "_alogOS", "_alogTM", "_alogOS_alogTM",
    "_alog2OS", "_alog2TM", "_alog2OS_alog2TM",
    "_alog3OS", "_alog3TM", "_alog3OS_alog3TM",
    "_a4",
    "_alog", "_alog2", "_alog3"
  )
  source("/home/garofalo/programs/Rose/R/read_block.R")
  source("/home/garofalo/programs/Rose/R/plot_routines.R")
  dir <- "/home/garofalo/analysis/g-2_new_stat/fit_all_strange/"
  count <- 0
  for (lat in list_lat) {
    for (a2 in list_a) {
      namefit <- paste0("amu_", name, lat, a2)
      namefile <- paste0(dir, namefit)

      file <- paste0(namefile, "_fit_P.dat")
      if (file.exists(file)) {
        count <- count + 1
      }
    }
  }
  df <- data.frame(
    "fit" = rep("", count),
    "res" = rep(0, count),
    "err" = rep(0, count),
    "chi2dof" = rep(0, count),
    "dof" = rep(0, count),
    "Npar" = rep(0, count),
    "Ndat" = rep(0, count),
    "mult" = rep(0, count)
  )
  gg <- myggplot(repeat_color = 1)
  count <- 1
  for (lat in list_lat) {
    # for (lat in c("_3b_BOS_BTM" )){
    for (a2 in list_a) {
      # for (a2 in c( "_a4OS_a4TM")) {
      namefit <- paste0("amu_", name, lat, a2)
      namefile <- paste0(dir, namefit)

      file <- paste0(namefile, "_fit_P.dat")
      if (file.exists(file)) {
        fit <- read_fit_P_file(file)
        mydata <- c("OS", "TM")
        if (str_detect(namefit, "onlyOS")) mydata <- c("OS")
        if (str_detect(namefit, "onlyTM")) mydata <- c("TM")
        # if (fit$dof == 1) next
        df[count, 1] <- namefit
        df[count, c(2, 3)] <- fit$P[1, c(2, 3)]
        df[count, 4] <- fit$chi2dof
        df[count, 5] <- fit$dof
        df[count, 6] <- fit$npar
        df[count, 7] <- fit$ndata
        if (str_detect(namefit, "log")) {
          df[count, 8] <- 3
        } else {
          df[count, 8] <- 1
        }

        namelegend <- "fit"
        if (str_detect(namefit, "log")) {
          namelegend <- paste0(namelegend, "-log")
        }
        if (str_detect(namefit, "_3b_BOS_BTM")) {
          namelegend <- paste0(namelegend, "-4beta")
        }
        if (
          (lat == "_3b_BOS_BTM" & a2 == "_a4OS_a4TM") |
            (lat == "_3b" & a2 == "") |
            (lat == "_3b" & a2 == "_a4OS_a4TM") |
            (lat == "_3b_BOS_BTM" & a2 == "_alogOS_alogTM") |
            (lat == "_3b_onlyTM" & a2 == "")
        ) {
          # if(fit$chi2dof<0.5 | (lat == "_3b_BOS_BTM" & a2 == "_a4OS_a4TM")){
          # gg <- plot_fit(
          #   basename = namefile,
          #   var = "afm",
          #   id_x = 1,
          #   data_type = mydata,
          #   width = 1e-4,
          #   gg = gg,
          #   single_name_for_fit = namelegend,
          #   noribbon = TRUE
          # )
        }
        count <- count + 1
      }
    }
  }
  a <- which(df$fit == "")
  if (length(a) > 0) {
    print("eliminating:")
    print(df$fit[a])
    df <- df[-a, ]
  }
  ave_AIC <- AIC(v = df$res, err = df$err, chi2dof = df$chi2dof, dof = df$dof, npar = df$Npar, multiplicity = df$mult)
  cat(
    "AIC (chi2 + 2Npar - Ndat)/2 = ", mean_print(ave_AIC$m, ave_AIC$dm),
    "(", ave_AIC$stat, ")", "[", ave_AIC$syst, "]", "\n\n"
  )
  df$AIC <- ave_AIC$AIC
  l <- order(df$AIC, decreasing = TRUE)
  sumAIC=0
  for (i in l) {
    namefile <- paste0(dir, df$fit[i ])
    mydata <- c(" OS", " TM")
    if (str_detect(df$fit[i ], "onlyOS")) mydata <- c(" OS")
    if (str_detect(df$fit[i ], "onlyTM")) mydata <- c(" TM")
    namelegend <- "fit"
    gg <- plot_fit(
      basename = namefile,
      var = "afm",
      id_x = 1,
      data_type = mydata,
      width = 1e-4,
      gg = gg,
      single_name_for_fit = paste0("AIC=",df$AIC[i]),
      noribbon = TRUE, alpha_line=0.2
    )
    sumAIC =sumAIC +df$AIC[i]
    if (sumAIC>0.3){
      break
    }
  }

  ###########################

  a <- which(df$dof == 1)
  if (length(a) > 0) {
    df1 <- df[-a, ]
  } else {
    df1 <- df
  }
  ave_AIC1 <- AIC(v = df1$res, err = df1$err, chi2dof = df1$chi2dof, dof = df1$dof, npar = df1$Npar, multiplicity = df1$mult)
  cat(
    "AIC (chi2 + 2Npar - Ndat)/2 (no dof =1) = ", mean_print(ave_AIC1$m, ave_AIC1$dm),
    "(", ave_AIC1$stat, ")", "[", ave_AIC1$syst, "]", "\n\n"
  )

  ave_AIC2 <- AIC2(v = df$res, err = df$err, chi2dof = df$chi2dof, dof = df$dof, npar = df$Npar, multiplicity = df$mult)
  cat(
    "AIC (chi2 + 2Npar -2 Ndat)/2 = ", mean_print(ave_AIC2$m, ave_AIC2$dm),
    "(", ave_AIC2$stat, ")", "[", ave_AIC2$syst, "]", "\n\n"
  )

  a <- which(str_detect(df$fit, "only"))
  df1 <- df[-a, ]
  ave_AIC11 <- AIC(v = df1$res, err = df1$err, chi2dof = df1$chi2dof, dof = df1$dof, npar = df1$Npar, multiplicity = df1$mult)
  cat(
    "AIC (chi2 + 2Npar - Ndat)/2 (only TM/OS combined) = ", mean_print(ave_AIC11$m, ave_AIC11$dm),
    "(", ave_AIC11$stat, ")", "[", ave_AIC11$syst, "]", "\n\n"
  )
  ave_AIC11 <- AIC2(v = df1$res, err = df1$err, chi2dof = df1$chi2dof, dof = df1$dof, npar = df1$Npar, multiplicity = df1$mult)
  cat(
    "AIC (chi2 + 2Npar -2 Ndat)/2 (only TM/OS combined) = ", mean_print(ave_AIC11$m, ave_AIC11$dm),
    "(", ave_AIC11$stat, ")", "[", ave_AIC11$syst, "]", "\n\n"
  )

  a <- which(str_detect(df$fit, "alog"))
  df1 <- df[-a, ]
  ave_AIC11 <- AIC(v = df1$res, err = df1$err, chi2dof = df1$chi2dof, dof = df1$dof, npar = df1$Npar, multiplicity = df1$mult)
  cat(
    "AIC (chi2 + 2Npar - Ndat)/2 (no log ) = ", mean_print(ave_AIC11$m, ave_AIC11$dm),
    "(", ave_AIC11$stat, ")", "[", ave_AIC11$syst, "]", "\n\n"
  )
  ave_AIC11 <- AIC2(v = df1$res, err = df1$err, chi2dof = df1$chi2dof, dof = df1$dof, npar = df1$Npar, multiplicity = df1$mult)
  cat(
    "AIC (chi2 + 2Npar -2 Ndat)/2 (no log ) = ", mean_print(ave_AIC11$m, ave_AIC11$dm),
    "(", ave_AIC11$stat, ")", "[", ave_AIC11$syst, "]", "\n\n"
  )

  a <- which(str_detect(df$fit, "_3b_BOS_BTM"))
  df1 <- df[a, ]
  ave_AIC11 <- AIC(v = df1$res, err = df1$err, chi2dof = df1$chi2dof, dof = df1$dof, npar = df1$Npar, multiplicity = df1$mult)
  cat(
    "AIC (chi2 + 2Npar - Ndat)/2 (always 4 latt) = ", mean_print(ave_AIC11$m, ave_AIC11$dm),
    "(", ave_AIC11$stat, ")", "[", ave_AIC11$syst, "]", "\n\n"
  )

  a <- which(str_detect(df$fit, "_3b_BOS_BTM"))
  a <- c(a, which(str_detect(df$fit, "_3b$")))
  df1 <- df[a, ]
  ave_AIC11 <- AIC(v = df1$res, err = df1$err, chi2dof = df1$chi2dof, dof = df1$dof, npar = df1$Npar, multiplicity = df1$mult)
  cat(
    "AIC (chi2 + 2Npar - Ndat)/2 (4 latt + 3 linear ) = ", mean_print(ave_AIC11$m, ave_AIC11$dm),
    "(", ave_AIC11$stat, ")", "[", ave_AIC11$syst, "]", "\n\n"
  )

  a <- which(str_detect(df$fit, "noC"))
  df1 <- df[-a, ]
  ave_AIC11 <- AIC(v = df1$res, err = df1$err, chi2dof = df1$chi2dof, dof = df1$dof, npar = df1$Npar, multiplicity = df1$mult)
  cat(
    "AIC (chi2 + 2Npar - Ndat)/2 (always C ) = ", mean_print(ave_AIC11$m, ave_AIC11$dm),
    "(", ave_AIC11$stat, ")", "[", ave_AIC11$syst, "]", "\n\n"
  )

  a <- c(which(str_detect(df$fit, "alog2")), which(str_detect(df$fit, "alog3")))
  df1 <- df[-a, ]
  ave_AIC11 <- AIC(v = df1$res, err = df1$err, chi2dof = df1$chi2dof, dof = df1$dof, npar = df1$Npar, multiplicity = 1)
  cat(
    "AIC (chi2 + 2Npar - Ndat)/2 (no a/log^2(3) a) = ", mean_print(ave_AIC11$m, ave_AIC11$dm),
    "(", ave_AIC11$stat, ")", "[", ave_AIC11$syst, "]", "\n\n"
  )

  gg <- gg + geom_pointrange(aes(
    x = 0, y = ave_AIC$m, ymin = ave_AIC$m - ave_AIC$dm,
    ymax = ave_AIC$m + ave_AIC$dm, color = "AIC", shape = "AIC", fill = "AIC"
  ))
  fig <- myplotly(gg, "", "$a^2$", "$a_{\\mu}(s)$", to_print = TRUE, output = "HTML", legend_position = c(0, 0))
  # fig <- fig + ylim(5.1e-9, 5.43e-9) +xlim(0,0.008)+ theme(axis.title.y=element_blank(),
  #         axis.text.y=element_blank(),
  #         axis.ticks.y=element_blank())+theme(plot.margin = margin(0,0,0,0, "cm"))
  gg <- ggplot() +
    geom_histogram(aes(y = df$res, weight = ave_AIC$AIC)) +
    # geom_density(aes(y = df$res, weight = ave_AIC$AIC)) +
    theme_bw()

  gg <- gg +
    # ylim(5.1e-9, 5.43e-9) +
    ylab("$a_{\\mu}(s)$") + theme(plot.margin = margin(0, 0, 0, 0, "cm")) + theme(
      axis.title.x = element_blank(),
      axis.text.x = element_text(angle = 45, vjust = 0.5, hjust = 0.5)
    )
  print(gg)
  # ggarrange(gg, fig,
  #   align = "h",
  #   # heights = c(2, 0.7),
  #   widths = c(1, 3.5),
  #   ncol = 2, nrow = 1
  # )
  return(df)
}


file <- sprintf("/home/garofalo/analysis/g-2_new_stat/fit_all_strange/amu_SD_3b_BOS_BTM_a4OS_a4TM_fit_data.txt")
df <- read.table(file, header = FALSE, fill = TRUE)
iy <- length(df[1, ]) - 2
dft <- df[, c(1, iy)]
# names(dft) <- c("$a^2(\\text{fm})$", "$a_{\\mu}(c)$", "r")
dft[, 2] <- mapply(mean_print, df[, iy], df[, iy + 1])

file <- sprintf("/home/garofalo/analysis/g-2_new_stat/fit_all_strange/amu_W_3b_BOS_BTM_a4OS_a4TM_fit_data.txt")
df <- read.table(file, header = FALSE, fill = TRUE)
iy <- length(df[1, ]) - 2
dft <- cbind(dft, mapply(mean_print, df[, iy], df[, iy + 1]))

file <- sprintf("/home/garofalo/analysis/g-2_new_stat/fit_all_strange/amu_LD_3b_BOS_BTM_a4OS_a4TM_fit_data.txt")
df <- read.table(file, header = FALSE, fill = TRUE)
iy <- length(df[1, ]) - 2
dft <- cbind(dft, mapply(mean_print, df[, iy], df[, iy + 1]))

file <- sprintf("/home/garofalo/analysis/g-2_new_stat/fit_all_strange/amu_SDpWpLD_3b_BOS_BTM_a4OS_a4TM_fit_data.txt")
df <- read.table(file, header = FALSE, fill = TRUE)
iy <- length(df[1, ]) - 2
dft <- cbind(dft, mapply(mean_print, df[, iy], df[, iy + 1]))
dft <- cbind(dft, c(
  "B-OS", "C-OS", "D-OS", "E-OS",
  "B-TM", "C-TM", "D-MT", "E-TM"
))

kable(dft, col.names = c(
  "$a^2(\\text{fm})$", "$a_{\\mu}^{SD}(s)$",
  "$a_{\\mu}^{W}(s)$", "$a_{\\mu}^{LD}(s)$",
  "$a_{\\mu}^{SD+W+LD}(s)$", "En"
))
```


<!-- ```{r, echo=FALSE, results='asis',  warning=FALSE} -->
<!-- df <- plot_the_Ambaradam("full") -->
<!-- ``` -->

<!-- ## tree level subtraction -->


<!-- ```{r, echo=FALSE, results='asis',  warning=FALSE} -->
<!-- df <- plot_the_Ambaradam("fulltree") -->
<!-- ``` -->



### SD window

window paper value: 9.074(64)e-10

```{r, echo=FALSE, results='asis',  warning=FALSE}
df <- plot_the_Ambaradam("SD")
write.table(df, file = "SD_strange", row.names = FALSE)
# gg <- ggplot() +
#     # geom_histogram(aes(y = df$res, weight = df$AIC)) +
#     geom_density(aes(y = df$res, weight = df$AIC)) +
#     theme_bw()
# gg

# gghistogram(df,
#    x = "res", y = "..density..",
#    weight = "AIC",
#    rug = TRUE,
#   add_density = TRUE
#   )
```

<!-- ```{r, echo=FALSE, results='asis',  warning=FALSE} -->
<!-- df <- plot_the_Ambaradam("SDtmin0") -->
<!-- ``` -->

here there are some bad fits for example the linear with 4 beta



### W window

window paper value: 27.28(20)e-10

```{r, echo=FALSE, results='asis',  warning=FALSE}
df <- plot_the_Ambaradam("W")
write.table(df, file = "W_strange", row.names = FALSE)
```


### LD


```{r, echo=FALSE, results='asis',  warning=FALSE}
df <- plot_the_Ambaradam("LD")
write.table(df, file = "LD_strange", row.names = FALSE)
```



### SUM


```{r, echo=FALSE, results='asis',  warning=FALSE}
df <- plot_the_Ambaradam("SDpWpLD")
write.table(df, file = "SDpWpLD_strange", row.names = FALSE)
```


```{r, echo=FALSE, results='asis',  warning=FALSE}
source("/home/garofalo/programs/Rose/R/plot_routines.R")

gg <- plot_fit(
  basename = "/home/garofalo/analysis/g-2_new_stat/fit_all_strange/amu_SDpWpLD_3b_BOS_BTM_a4OS_a4TM",
  var = "afm",
  id_x = 1,
  data_type = c("OS", "TM"),
  width = 1e-4,
  gg = NULL,
  single_name_for_fit = "fit_4b-a4",
  noribbon = FALSE, noline = TRUE
)
gg <- plot_fit(
  basename = "/home/garofalo/analysis/g-2_new_stat/fit_all_strange/amu_SDpWpLD_3b",
  var = "afm",
  id_x = 1,
  data_type = c("OS", "TM"),
  width = 1e-4,
  gg = gg,
  single_name_for_fit = "fit-3b-a2",
  noribbon = FALSE
)
gg <- plot_fit(
  basename = "/home/garofalo/analysis/g-2_new_stat/fit_all_strange/amu_SDpWpLD_3b_BOS_BTM",
  var = "afm",
  id_x = 1,
  data_type = c("OS", "TM"),
  width = 1e-4,
  gg = gg,
  single_name_for_fit = "fit-4b-a2",
  noribbon = FALSE
)
gg <- plot_fit(
  basename = "/home/garofalo/analysis/g-2_new_stat/fit_all_strange/amu_SDpWpLD_3b_BOS_BTM_alog2OS_alog2TM",
  var = "afm",
  id_x = 1,
  data_type = c("OS", "TM"),
  width = 1e-4,
  gg = gg,
  single_name_for_fit = "fit-log",
  noribbon = FALSE
)
gg <- plot_fit(
  basename = "/home/garofalo/analysis/g-2_new_stat/fit_all_strange/amu_SDpWpLD_3b_BOS_BTM_alog2OS",
  var = "afm",
  id_x = 1,
  data_type = c("OS", "TM"),
  width = 1e-4,
  gg = gg,
  single_name_for_fit = "fit-logOS",
  noribbon = FALSE
)


fig <- myplotly(gg, "", "$a^2$", "$a_{\\mu}(s)$", to_print = TRUE, output = "HTML", legend_position = c(0, 0))
```

## MAX twist correction in scale setting

```{r, echo=FALSE, results='asis',  warning=FALSE}
gg <- plot_fit(
  basename = "/home/garofalo/analysis/g-2_new_stat/fit_all_strange/amu_SDpWpLD_3b_BOS_BTM_a4OS_a4TM",
  var = "afm",
  id_x = 1,
  data_type = c("OS", "TM"),
  width = 1e-4,
  gg = NULL,
  single_name_for_fit = "fit",
  noribbon = FALSE, noline = TRUE
)
gg <- plot_fit(
  basename = "/home/garofalo/analysis/g-2_new_stat_no_max_twist/fit_all_strange/amu_SDpWpLD_3b_BOS_BTM_a4OS_a4TM",
  var = "afm",
  id_x = 1,
  data_type = c("OS-no-max_twist", "TM-no-max_twist"),
  width = 1e-4,
  gg = gg,
  single_name_for_fit = "fit-no-max-twist",
  noribbon = FALSE, noline = TRUE
)

fig <- myplotly(gg, "", "$a^2$", "$a_{\\mu}(s)$", to_print = TRUE, output = "HTML", legend_position = c(0, 0))
```



## FVE

```{r, echo=FALSE, results='asis',  warning=FALSE}
gg <- plot_fit(
  basename = "/home/garofalo/analysis/g-2_new_stat/fit_all_strange/amu_SDpWpLD_3b_BOS_BTM_FVE_a4OS_a4TM",
  var = "afm",
  id_x = 1,
  data_type = c("OS-sum", "TM-sum"),
  width = 1e-4,
  gg = NULL,
  single_name_for_fit = "fit-sum",
  noribbon = FALSE, noline = TRUE
)

gg <- plot_fit(
  basename = "/home/garofalo/analysis/g-2_new_stat/fit_all_strange/amu_SD_3b_BOS_BTM_FVE_a4OS_a4TM",
  var = "afm",
  id_x = 1,
  data_type = c("OS-SD", "TM-SD"),
  width = 1e-4,
  gg = gg,
  single_name_for_fit = "fit-SD",
  noribbon = FALSE, noline = TRUE
)

gg <- plot_fit(
  basename = "/home/garofalo/analysis/g-2_new_stat/fit_all_strange/amu_W_3b_BOS_BTM_FVE_a4OS_a4TM",
  var = "afm",
  id_x = 1,
  data_type = c("OS-W", "TM-W"),
  width = 1e-4,
  gg = gg,
  single_name_for_fit = "fit-W",
  noribbon = FALSE, noline = TRUE
)
gg <- plot_fit(
  basename = "/home/garofalo/analysis/g-2_new_stat/fit_all_strange/amu_LD_3b_BOS_BTM_FVE_a4OS_a4TM",
  var = "afm",
  id_x = 1,
  data_type = c("OS-LD", "TM-LD"),
  width = 1e-4,
  gg = gg,
  single_name_for_fit = "fit-LD",
  noribbon = FALSE, noline = TRUE
)


fig <- myplotly(gg, "", "$a^2$", "$a_{\\mu}(s)$", to_print = TRUE, output = "HTML", legend_position = c(0, 0))
```

## misstuning corrected data


### SD window

window paper value: 9.074(64)e-10

```{r, echo=FALSE, results='asis',  warning=FALSE}
df <- plot_the_Ambaradam("SDcor")
write.table(df, file = "SDcor_strange", row.names = FALSE)
```



### W window

window paper value: 27.28(20)e-10

```{r, echo=FALSE, results='asis',  warning=FALSE}
df <- plot_the_Ambaradam("Wcor")
write.table(df, file = "Wcor_strange", row.names = FALSE)
```



### LD


```{r, echo=FALSE, results='asis',  warning=FALSE}
df <- plot_the_Ambaradam("LDcor")
write.table(df, file = "LDcor_strange", row.names = FALSE)
```



### SUM


```{r, echo=FALSE, results='asis',  warning=FALSE}
df <- plot_the_Ambaradam("SDpWpLDcor")
write.table(df, file = "SDpWpLDcor_strange", row.names = FALSE)
```


## eta


### SD etas

window paper value: 9.074(64)e-10

```{r, echo=FALSE, results='asis',  warning=FALSE}
df <- plot_the_Ambaradam("SDetas")
write.table(df, file = "SDeta_cor_strange", row.names = FALSE)
```

### W etas

window paper value: 27.28(20)e-10

```{r, echo=FALSE, results='asis',  warning=FALSE}
df <- plot_the_Ambaradam("Wetas")
write.table(df, file = "Weta_cor_strange", row.names = FALSE)
```


```{r, echo=FALSE, results='asis',  warning=FALSE}
gg <- plot_fit(
  basename = "/home/garofalo/analysis/g-2_new_stat/fit_all_strange/amu_Wcor_3b_BOS_BTM_a4OS_a4TM",
  var = "afm",
  id_x = 1,
  data_type = c("K", "K"),
  width = 1e-4,
  gg = NULL,
  single_name_for_fit = "fit",
  noline = TRUE
)
gg <- plot_fit(
  basename = "/home/garofalo/analysis/g-2_new_stat/fit_all_strange/amu_Wetas_3b_BOS_BTM_a4OS_a4TM",
  var = "afm",
  id_x = 1,
  # data_type = c("OS-eta", "TM-eta"),
  data_type = c("etas", "etas"),
  width = 1e-4,
  gg = gg,
  single_name_for_fit = "fit-eta",
  noline = TRUE
)

fig <- myplotly(gg, "", "$a^2$", "$a_{\\mu}(s)$", to_print = TRUE, output = "HTML", legend_position = c(0, 0))
```


### LD etas

```{r, echo=FALSE, results='asis',  warning=FALSE}
df <- plot_the_Ambaradam("LDetas")
write.table(df, file = "LDeta_cor_strange", row.names = FALSE)
```

### SUM

```{r, echo=FALSE, results='asis',  warning=FALSE}
df <- plot_the_Ambaradam("SDpWpLDetas")
write.table(df, file = "SDpWpLDetas_cor_strange", row.names = FALSE)
```

## Eta + FVE


### SD etas

window paper value: 9.074(64)e-10

```{r, echo=FALSE, results='asis',  warning=FALSE}
df <- plot_the_Ambaradam("SDetasFVE")
```

### W

window paper value: 27.28(20)e-10

```{r, echo=FALSE, results='asis',  warning=FALSE}
df <- plot_the_Ambaradam("WetasFVE")
```



### LD 

```{r, echo=FALSE, results='asis',  warning=FALSE}
df <- plot_the_Ambaradam("LDetasFVE")
```

### SUM

```{r, echo=FALSE, results='asis',  warning=FALSE}
df <- plot_the_Ambaradam("SDpWpLDetasFVE")
```

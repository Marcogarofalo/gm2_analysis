# scale setting

no bounding has been applied

```{r ,include=FALSE}
library(Rose)
library(ggplot2)
library(plotly)
library(knitr)
# library(hadron)
# library(kableExtra) # breaks latex
# library(tidyverse)

df <- data.frame(x = 1:5, y = 1:5)
f1 <- function(df) {
  gg <- ggplot(df, aes(x, y)) +
    geom_point()
  assign("ggp", plotly::ggplotly(gg), envir = parent.frame())
  # ggp
  df # NOT returning a plot
}
res1 <- f1(df)
ggp # Let knit handle the plot
myplotly(ggplot())
# widgetframe::frameableWidget(ggplotly(ggp)%>%config(mathjax = "cdn") )
```

$$
f_\pi^j(\xi, \infty) =\frac{f_\pi^j(\xi, L) }{1-\Delta_{FVE}}
$$
$$
 \Delta_{FVE} = - 2 \xi_\ell ~ \widetilde{g}_1(\lambda) \\
  \widetilde{g}_1(\lambda) \simeq 4 \sqrt{\frac{\pi}{2}} \sum_{n=1}^\infty \frac{m(n)}{(\sqrt{n} \lambda)^{3/2}} e^{- \sqrt{n} \lambda} \\
   \xi_\pi \equiv \frac{M_\pi^2}{(4 \pi f_\pi)^2}
$$
with $m(n)$ the multiplicities of a three-dimensional vector $\vec{n}$ having integer norm $n$ (i.e.~$m(n) = \{6, 12, 8, 6, ...\}$) and $\lambda=M_\pi L$.
To obtain the above formula we expand $K_1$, the Bessel function of the second kind, by its asymptotic expansion.\
Different choices of the expansion variable are possible: one can replace $f_\pi$ with the LO LEC $f$ and/or replace $M_\pi^2$ with $2 B m_\ell$ (and correspondingly $M_\pi L$ with $\sqrt{2 B m_\ell} L$ in the arguments of the functions $\widetilde{g}_1$ and $\widetilde{g}_2$). 
At NLO (i.e., for the GL formula) the above changes are equivalent, since any difference represents a NNLO effect.

$$
af_\pi^j(\xi) = af_\pi^j(\xi^{phys}) \left\{1-2\xi\log(\xi/\xi^{phys})+ [P+P_{disc} (af_\pi^j(\xi^{phys}))^2] (\xi-\xi^{phys})\right\} 
$$


$$
P[0]=a(A) \text{fm}\\
P[1]=a(B) \text{fm}\\
P[2]=a(C) \text{fm}\\
P[3]=a(D) \text{fm}\\
P[4]=a(E) \text{fm}
$$

```{r, echo=FALSE, results='asis', dev='tikz', warning=FALSE}


dir <- "/home/garofalo/analysis/g-2_new_stat/fit_all/"
namefit <- paste0(dir, "afpi_cov")
file <- paste0(namefit, "_fit_P.dat")
fit <- read_fit_P_file(file)
cat("\n\n")
dt <- make_table_fit_result(fit)
print(dt)
gg <- myggplot(repeat_color = 1)
gg <- plot_fit(
  basename = namefit,
  var = "xi",
  id_x = 5,
  data_type = c("A-no-max-tw", "B-no-max-tw", "C-no-max-tw", "D-no-max-tw", "E-no-max-tw", "B-no-max-tw", "C-no-max-tw", "D-no-max-tw"),
  width = 1e-4,
  gg = gg, 
  labelfit = "",
  # , single_name_for_fit = "fit"
  # , nolabel_for_fit = TRUE
  noline = TRUE
)
namefit <- paste0(dir, "afpi_max_twist_cov")
gg <- plot_fit(
  basename = namefit,
  var = "xi",
  id_x = 5,
  data_type = c("A", "B", "C", "D", "E", "B", "C", "D"),
  width = 1e-4,
  gg = gg, 
  labelfit = "",
  # , single_name_for_fit = "fit"
  # , nolabel_for_fit = TRUE
  noline = TRUE
)
# filed <- paste0(namefit, "_fit_data.txt")
# df <- read.table(filed, header = FALSE, fill = TRUE)
# idy <- ncol(df) - 2
# kable(df[, c(1,2,3,4,idy,idy+1)],col.names =c("mu","aMpi","afpi","L","afpi-inf","err") )
gg <- gg + geom_vline(xintercept = 0.00678723)
fig <- myplotly(gg, "", "$\\xi$", "$af_\\pi$", to_print = TRUE)
```

## scaling with tau paper

```{r, echo=FALSE, results='asis', dev='tikz', warning=FALSE}
a_tau <- c(0.0908026, 0.07951, 0.06816, 0.05688, 0.04891)
da_tau <- c(0.000535517, 0.00004, 0.00008, 0.00006, 0.00006)
gg <- myggplot()
gg1 <- myggplot()

diff <- (a_tau - fit$P[c(1:5), 2])
diff_rel <- (a_tau - fit$P[c(1:5), 2])/a_tau
err<- (1/a_tau)*fit$P[c(1:5), 3] + (fit$P[c(1:5), 2]/a_tau)^2 *da_tau
# gg <- gg + geom_pointrange(aes(
#   x = a_tau^2, y = diff,
#   ymin = diff - da_tau,
#   ymax = diff + da_tau,
#   color = "tau-MG",
#   shape = "tau-MG",
#   fill = "tau-MG"
# ))
gg1 <- gg1 + geom_pointrange(aes(
  x = a_tau^2, y = diff_rel,
  ymin = diff_rel - err,
  ymax = diff_rel + err,
  color = "tau-MG",
  shape = "tau-MG",
  fill = "tau-MG"
))

fit_no_max_twist<-fit
# fig <- myplotly(gg, "", "$a^2$", "$a(\\tau)-a(MG)$", to_print = TRUE, xrange = c(0, 0.0085))
fig <- myplotly(gg1, "", "$a^2$", "$(a(\\tau)-a(MG))/a(\\tau)$", to_print = TRUE, xrange = c(0, 0.0085))
```

## max twist corrections

```{r, echo=FALSE, results='asis', dev='tikz', warning=FALSE}


dir <- "/home/garofalo/analysis/g-2_new_stat/fit_all/"
namefit <- paste0(dir, "afpi_max_twist_cov")
file <- paste0(namefit, "_fit_P.dat")
fit <- read_fit_P_file(file)
cat("\n\n")
#dt <- make_table_fit_result(fit)
dt<- data.frame("par"=fit$P[,1] )
dt$value<- mapply(mean_print, fit$P[,2], fit$P[,3])
dt$no_max_twist<- mapply(mean_print, fit_no_max_twist$P[,2], fit_no_max_twist$P[,3])
#print(dt)
kable(dt)
gg <- myggplot(repeat_color = 1)
gg <- plot_fit(
  basename = namefit,
  var = "xi",
  id_x = 5,
  data_type = c("A", "B", "C", "D", "E", "B", "C", "D"),
  width = 1e-4,
  gg = gg, 
  labelfit = "",
  # , single_name_for_fit = "fit"
  # , nolabel_for_fit = TRUE
  noline = TRUE
)
# filed <- paste0(namefit, "_fit_data.txt")
# df <- read.table(filed, header = FALSE, fill = TRUE)
# idy <- ncol(df) - 2
# kable(df[, c(1,2,3,4,idy,idy+1)],col.names =c("mu","aMpi","afpi","L","afpi-inf","err") )
gg <- gg + geom_vline(xintercept = 0.00678723)
fig <- myplotly(gg, "", "$\\xi$", "$af_\\pi$", to_print = TRUE)
```

## scaling with tau paper

```{r, echo=FALSE, results='asis', dev='tikz', warning=FALSE}
a_tau <- c(0.0908026, 0.07951, 0.06816, 0.05688, 0.04891)
da_tau <- c(0.000535517, 0.00004, 0.00008, 0.00006, 0.00006)
gg <- myggplot()
gg1 <- myggplot()

diff <- (a_tau - fit$P[c(1:5), 2])
diff_rel <- (a_tau - fit$P[c(1:5), 2])/a_tau
err<- (1/a_tau)*fit$P[c(1:5), 3] + (fit$P[c(1:5), 2]/a_tau)^2 *da_tau
# gg <- gg + geom_pointrange(aes(
#   x = a_tau^2, y = diff,
#   ymin = diff - da_tau,
#   ymax = diff + da_tau,
#   color = "tau-MG",
#   shape = "tau-MG",
#   fill = "tau-MG"
# ))
gg1 <- gg1 + geom_pointrange(aes(
  x = a_tau^2, y = diff_rel,
  ymin = diff_rel - err,
  ymax = diff_rel + err,
  color = "tau-MG",
  shape = "tau-MG",
  fill = "tau-MG"
))


# fig <- myplotly(gg, "", "$a^2$", "$a(\\tau)-a(MG)$", to_print = TRUE, xrange = c(0, 0.0085))
fig <- myplotly(gg1, "", "$a^2$", "$(a(\\tau)-a(MG))/a(\\tau)$", to_print = TRUE, xrange = c(0, 0.0085))
```

## Only phys point ensembles


```{r, echo=FALSE, results='asis', dev='tikz', warning=FALSE}


dir <- "/home/garofalo/analysis/g-2_new_stat/fit_all/"
namefit <- paste0(dir, "afpi_phys_point_cov")
file <- paste0(namefit, "_fit_P.dat")
fit <- read_fit_P_file(file)
cat("\n\n")
dt <- make_table_fit_result(fit)
print(dt)
gg <- myggplot(repeat_color = 1)
gg <- plot_fit(
  basename = namefit,
  var = "xi",
  id_x = 5,
  data_type = c( "B", "C", "D", "E", "B", "C", "D"),
  width = 1e-4,
  gg = gg,
  labelfit = "",
  # , single_name_for_fit = "fit"
  # , nolabel_for_fit = TRUE
  noline = TRUE
)
# filed <- paste0(namefit, "_fit_data.txt")
# df <- read.table(filed, header = FALSE, fill = TRUE)
# idy <- ncol(df) - 2
# kable(df[, c(1,2,3,4,idy,idy+1)],col.names =c("mu","aMpi","afpi","L","afpi-inf","err") )
gg <- gg + geom_vline(xintercept = 0.00678723)
fig <- myplotly(gg, "", "$\\xi$", "$af_\\pi$", to_print = TRUE)
```

```{r, echo=FALSE, results='asis', dev='tikz', warning=FALSE}
a_tau <- c( 0.07951, 0.06816, 0.05688, 0.04891)
da_tau <- c( 0.00004, 0.00008, 0.00006, 0.00006)
gg <- myggplot()
gg1 <- myggplot()

diff <- (a_tau - fit$P[c(1:4), 2])
diff_rel <- (a_tau - fit$P[c(1:4), 2])/a_tau
err<- (1/a_tau)*fit$P[c(1:4), 3] + (fit$P[c(1:4), 2]/a_tau)^2 *da_tau
# gg <- gg + geom_pointrange(aes(
#   x = a_tau^2, y = diff,
#   ymin = diff - da_tau,
#   ymax = diff + da_tau,
#   color = "tau-MG",
#   shape = "tau-MG",
#   fill = "tau-MG"
# ))
gg1 <- gg1 + geom_pointrange(aes(
  x = a_tau^2, y = diff_rel,
  ymin = diff_rel - err,
  ymax = diff_rel + err,
  color = "tau-MG",
  shape = "tau-MG",
  fill = "tau-MG"
))


# fig <- myplotly(gg, "", "$a^2$", "$a(\\tau)-a(MG)$", to_print = TRUE, xrange = c(0, 0.0085))
fig <- myplotly(gg1, "", "$a^2$", "$(a(\\tau)-a(MG))/a(\\tau)$", to_print = TRUE, xrange = c(0, 0.0085))
```


<!-- ## Extra FVE -->

<!-- here we add an residual volume dependece -->
<!-- $$ -->
<!-- a f_\pi(L)=a f_\pi(L=\infty)\left\{\ 1+P_{FVE}\xi \frac{e^{M_\pi L}}{(M_\pi L)^{3/2}} \right\} -->
<!-- $$ -->


<!-- ```{r, echo=FALSE, results='asis', dev='tikz', warning=FALSE} -->

<!-- dir <- "/home/garofalo/analysis/g-2_new_stat/fit_all/" -->
<!-- namefit <- paste0(dir, "afpi_resFVE_corr_cov") -->
<!-- file <- paste0(namefit, "_fit_P.dat") -->
<!-- fit <- read_fit_P_file(file) -->
<!-- cat("\n\n") -->
<!-- dt <- make_table_fit_result(fit) -->
<!-- print(dt) -->
<!-- gg <- myggplot(repeat_color = 1) -->
<!-- gg <- plot_fit( -->
<!--   basename = namefit, -->
<!--   var = "xi", -->
<!--   id_x = 5, -->
<!--   data_type = c("A", "B", "C", "D", "E", "B", "C", "D"), -->
<!--   width = 1e-4, -->
<!--   gg = gg, , -->
<!--   labelfit = "", -->
<!--   # , single_name_for_fit = "fit" -->
<!--   # , nolabel_for_fit = TRUE -->
<!--   , noline = TRUE -->
<!-- ) -->

<!-- # namefit <- paste0(dir, "afpi_resFVE_cov") -->
<!-- # gg <- plot_fit( -->
<!-- #   basename = namefit, -->
<!-- #   var = "xi", -->
<!-- #   id_x = 5, -->
<!-- #   data_type = c("A_L", "B_L", "C_L", "D_L", "E_L", "B_L", "C_L", "D_L"), -->
<!-- #   width = 1e-4, -->
<!-- #   gg = gg, , -->
<!-- #   labelfit = "", -->
<!-- #   # , single_name_for_fit = "fit" -->
<!-- #   # , nolabel_for_fit = TRUE -->
<!-- #   , noline = TRUE,noribbon = TRUE -->
<!-- # ) -->
<!-- gg <- gg + geom_vline(xintercept = 0.00678723) -->
<!-- fig <- myplotly(gg, "", "$\\xi$", "$af_\\pi$", to_print = TRUE) -->
<!-- ``` -->



<!-- ```{r, echo=FALSE, results='asis', dev='tikz', warning=FALSE} -->
<!-- a_tau <- c(0.0908026, 0.07951, 0.06816, 0.05688, 0.04891) -->
<!-- da_tau <- c(0.000535517, 0.00004, 0.00008, 0.00006, 0.00006) -->
<!-- gg <- myggplot() -->

<!-- diff <- (a_tau - fit$P[c(1:5), 2]) -->
<!-- gg <- gg + geom_pointrange(aes( -->
<!--   x = a_tau^2, y = diff, -->
<!--   ymin = diff - da_tau, -->
<!--   ymax = diff + da_tau, -->
<!--   color = "tau-MG", -->
<!--   shape = "tau-MG", -->
<!--   fill = "tau-MG" -->
<!-- )) -->


<!-- fig <- myplotly(gg, "", "$a^2$", "$a(\\tau)-a(MG)$", to_print = TRUE, xrange = c(0, 0.0085)) -->
<!-- ``` -->


## No C20


```{r, echo=FALSE, results='asis', dev='tikz', warning=FALSE}

dir <- "/home/garofalo/analysis/g-2_new_stat/fit_all/"
namefit <- paste0(dir, "afpi_cov_noC20")
file <- paste0(namefit, "_fit_P.dat")
fit <- read_fit_P_file(file)
cat("\n\n")
dt <- make_table_fit_result(fit)
print(dt)
gg <- myggplot(repeat_color = 1)
gg <- plot_fit(
  basename = namefit,
  var = "xi",
  id_x = 5,
  data_type = c("A", "B", "C", "D", "E", "B", "C", "D"),
  width = 1e-4,
  gg = gg, ,
  labelfit = "",
  # , single_name_for_fit = "fit"
  # , nolabel_for_fit = TRUE
  , noline = TRUE
)
gg <- gg + geom_vline(xintercept = 0.00678723)
fig <- myplotly(gg, "", "$\\xi$", "$af_\\pi$", to_print = TRUE)
```

## scaling with tau paper

```{r, echo=FALSE, results='asis', dev='tikz', warning=FALSE}
a_tau <- c(0.0908026, 0.07951, 0.06816, 0.05688, 0.04891)
da_tau <- c(0.000535517, 0.00004, 0.00008, 0.00006, 0.00006)
gg <- myggplot()

diff <- (a_tau - fit$P[c(1:5), 2])
gg <- gg + geom_pointrange(aes(
  x = a_tau^2, y = diff,
  ymin = diff - da_tau,
  ymax = diff + da_tau,
  color = "tau-MG",
  shape = "tau-MG",
  fill = "tau-MG"
))


fig <- myplotly(gg, "no C48", "$a^2$", "$a(\\tau)-a(MG)$", to_print = TRUE, xrange = c(0, 0.0085))
```
